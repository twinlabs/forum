extends application

block vars
  - var bodyClass="index posts topics"

block main
  if (user && user.id === 0)
    include login.jade

  else

    if (!posts || posts.length === 0)
      | No threads. Why not contribute to the forum?

    else
      .layout-meta
        a.action.read-all
          | mark all topics read
      .topics
        each post in posts
          include posts/topic

      if (count > 7 && showFetchButton)
        form(action='/', class="loadall")
          input(type="hidden", name="all", value="true")
          button(type="submit")
            | Load all topics
    a.action.new(href="#") new topic
    form.new.hidden
      .input
        input(class="input-input input-text input-title" type="text" placeholder="Title")
      .input.textarea
        textarea(class="input-input input-textarea input-body" placeholder="Body")
      button(class="input-submit" type="submit")
        | Submit

block script
  //- index-specific <script> tag(s) go here:
  script(src="/javascripts/emoji.js")
  script(src="/templates/post/topic.js")
  script.
    var checkUnread = function() {
      var $topics = $('.topics .topic');

      $topics.each(function(index, element) {
        var $topic = $(this);
        var topicTimestamp = parseInt(+new Date($topic.find('[data-timestamp]').data('timestamp')), 10);
        var lastVisitedTimestamp = parseInt(forum.constants.lastVisited[this.getAttribute('data-id')] || 0, 10);

        if (topicTimestamp > lastVisitedTimestamp) {
          $topic.addClass('unread');
          $topic.find('.title a').attr('href', ($topic.find('.title a').attr('href') + '#reply'));
        } else {
          $topic.removeClass('unread');
        }
      });
    }

    checkUnread();

    var updateThreadMetadata = function(response){
      var $topicNode = $('.topic').filter('[data-id=' + response.parent + ']');

      $topicNode.find('.replies .count').text(parseInt($topicNode.find('.replies .count').text()) + 1);

      $topicNode.find('.time .distance').text(moment(response.created_at).fromNow())

      $topicNode.find('.datum.username').text(response.user.name);

      $topicNode.find('[data-timestamp]').data('timestamp', response.created_at)

      checkUnread();
    }

    var socket = io.connect(forum.constants.socketAddress);

    socket.on('post', function(response){
      if (typeof response.parent !== "undefined") {
        return updateThreadMetadata(response);
      }

      var locals = {};
      locals.post = response;
      locals.moment = moment;
      locals.marked = marked;
      locals.user = forum.constants.user;
      locals.post.children = [];
      locals.getPostDate = function(post){ return post.created_at; };

      $(anonymous(locals)).appendTo('.main .topics');

      $('.post .distance').text(function(){
        var postTime = moment($(this).data('timestamp'));
        if (postTime.isSame(moment(), 'day') && postTime.fromNow() !== $(this).text()) {
          return postTime.fromNow();
        }
      });

      checkUnread();
    });


    $('.action.new').on('click', function(event){
      event.preventDefault();
      $('form.new').removeClass('hidden');
    });

    $('form.new').on('submit', function(event){
      if ($.trim($(this).find('.input-title').val()).length < 1) {
        return false;
      }
      $.ajax({
        type: 'POST',
        contentType: 'application/json;charset=UTF-8',
        dataType: 'json',
        url: '/api/topics',
        data: JSON.stringify({
          title: $(this).find('.input-title').val(),
          body: emoji.replace_unified($(this).find('.input-body').val())
        }),
        success: function() {
          $('form.new, .action.new').remove();
        }
      });
      event.preventDefault();
    });

    $('.action.read-all').on('click', function(event) {
      event.preventDefault();

      socket.emit('markallread', {
        user: {
          id: forum.constants.user.id,
          name: forum.constants.user.name
        }
      });

      $('.topics .topic').removeClass('unread');
    });
